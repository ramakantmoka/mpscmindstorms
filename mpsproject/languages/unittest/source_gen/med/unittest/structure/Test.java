package med.unittest.structure;

/*Generated by MPS */

import med.core.structure.MedBase;
import med.core.structure.IExportableModuleContent;
import med.core.structure.IHasIdentifierName;
import med.core.structure.IProjectionLevelAware;
import jetbrains.mps.smodel.SNode;
import med.core.structure.StatementList;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class Test extends MedBase implements IExportableModuleContent, IHasIdentifierName, IProjectionLevelAware {
  public static final String concept = "med.unittest.structure.Test";
  public static final String DESCRIPTION = "description";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String NAME = "name";
  public static final String EXPORT = "export";
  public static final String BODY = "body";

  public Test(SNode node) {
    super(node);
  }

  public String getDescription() {
    return this.getProperty(Test.DESCRIPTION);
  }

  public void setDescription(String value) {
    this.setProperty(Test.DESCRIPTION, value);
  }

  public String getShortDescription() {
    return this.getProperty(Test.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(Test.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(Test.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(Test.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(Test.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(Test.VIRTUAL_PACKAGE, value);
  }

  public String getName() {
    return this.getProperty(Test.NAME);
  }

  public void setName(String value) {
    this.setProperty(Test.NAME, value);
  }

  public boolean getExport() {
    return this.getBooleanProperty(Test.EXPORT);
  }

  public void setExport(boolean value) {
    this.setBooleanProperty(Test.EXPORT, value);
  }

  public StatementList getBody() {
    return (StatementList)this.getChild(StatementList.class, Test.BODY);
  }

  public void setBody(StatementList node) {
    super.setChild(Test.BODY, node);
  }

  public static Test newInstance(SModel sm, boolean init) {
    return (Test)SModelUtil_new.instantiateConceptDeclaration("med.unittest.structure.Test", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static Test newInstance(SModel sm) {
    return Test.newInstance(sm, false);
  }
}
