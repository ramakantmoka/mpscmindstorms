package med.collections.structure;

/*Generated by MPS */

import med.core.structure.Statement;
import jetbrains.mps.smodel.SNode;
import med.core.structure.IVariableReference;
import med.core.structure.StatementList;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ForeachStatement extends Statement {
  public static final String concept = "med.collections.structure.ForeachStatement";
  public static final String ITERATOR = "iterator";
  public static final String VARIABLE = "variable";
  public static final String BODY = "body";

  public ForeachStatement(SNode node) {
    super(node);
  }

  public ForeachIteratorDeclaration getIterator() {
    return (ForeachIteratorDeclaration)this.getChild(ForeachIteratorDeclaration.class, ForeachStatement.ITERATOR);
  }

  public void setIterator(ForeachIteratorDeclaration node) {
    super.setChild(ForeachStatement.ITERATOR, node);
  }

  public IVariableReference getVariable() {
    return (IVariableReference)this.getChild(IVariableReference.class, ForeachStatement.VARIABLE);
  }

  public void setVariable(IVariableReference node) {
    super.setChild(ForeachStatement.VARIABLE, node);
  }

  public StatementList getBody() {
    return (StatementList)this.getChild(StatementList.class, ForeachStatement.BODY);
  }

  public void setBody(StatementList node) {
    super.setChild(ForeachStatement.BODY, node);
  }

  public static ForeachStatement newInstance(SModel sm, boolean init) {
    return (ForeachStatement)SModelUtil_new.instantiateConceptDeclaration("med.collections.structure.ForeachStatement", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ForeachStatement newInstance(SModel sm) {
    return ForeachStatement.newInstance(sm, false);
  }
}
