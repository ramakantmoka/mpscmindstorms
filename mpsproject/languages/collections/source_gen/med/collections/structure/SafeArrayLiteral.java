package med.collections.structure;

/*Generated by MPS */

import med.core.structure.Expression;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class SafeArrayLiteral extends Expression {
  public static final String concept = "med.collections.structure.SafeArrayLiteral";
  public static final String ELEMENTS = "elements";

  public SafeArrayLiteral(SNode node) {
    super(node);
  }

  public int getElementsesCount() {
    return this.getChildCount(SafeArrayLiteral.ELEMENTS);
  }

  public Iterator<Expression> elementses() {
    return this.children(Expression.class, SafeArrayLiteral.ELEMENTS);
  }

  public List<Expression> getElementses() {
    return this.getChildren(Expression.class, SafeArrayLiteral.ELEMENTS);
  }

  public void addElements(Expression node) {
    this.addChild(SafeArrayLiteral.ELEMENTS, node);
  }

  public void insertElements(Expression prev, Expression node) {
    this.insertChild(prev, SafeArrayLiteral.ELEMENTS, node);
  }

  public static SafeArrayLiteral newInstance(SModel sm, boolean init) {
    return (SafeArrayLiteral)SModelUtil_new.instantiateConceptDeclaration("med.collections.structure.SafeArrayLiteral", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static SafeArrayLiteral newInstance(SModel sm) {
    return SafeArrayLiteral.newInstance(sm, false);
  }
}
