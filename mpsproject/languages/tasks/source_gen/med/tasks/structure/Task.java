package med.tasks.structure;

/*Generated by MPS */

import med.core.structure.MedBase;
import med.core.structure.IExportableModuleContent;
import med.core.structure.IHasIdentifierName;
import med.core.structure.IDocumentable;
import jetbrains.mps.smodel.SNode;
import med.core.structure.StatementList;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class Task extends MedBase implements IExportableModuleContent, IHasIdentifierName, IDocumentable {
  public static final String concept = "med.tasks.structure.Task";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String NAME = "name";
  public static final String TEXT = "text";
  public static final String EXPORT = "export";
  public static final String SCHEDULING = "scheduling";
  public static final String BODY = "body";

  public Task(SNode node) {
    super(node);
  }

  public String getShortDescription() {
    return this.getProperty(Task.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(Task.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(Task.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(Task.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(Task.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(Task.VIRTUAL_PACKAGE, value);
  }

  public String getName() {
    return this.getProperty(Task.NAME);
  }

  public void setName(String value) {
    this.setProperty(Task.NAME, value);
  }

  public String getText() {
    return this.getProperty(Task.TEXT);
  }

  public void setText(String value) {
    this.setProperty(Task.TEXT, value);
  }

  public boolean getExport() {
    return this.getBooleanProperty(Task.EXPORT);
  }

  public void setExport(boolean value) {
    this.setBooleanProperty(Task.EXPORT, value);
  }

  public SchedulingPolicy getScheduling() {
    return (SchedulingPolicy)this.getChild(SchedulingPolicy.class, Task.SCHEDULING);
  }

  public void setScheduling(SchedulingPolicy node) {
    super.setChild(Task.SCHEDULING, node);
  }

  public StatementList getBody() {
    return (StatementList)this.getChild(StatementList.class, Task.BODY);
  }

  public void setBody(StatementList node) {
    super.setChild(Task.BODY, node);
  }

  public static Task newInstance(SModel sm, boolean init) {
    return (Task)SModelUtil_new.instantiateConceptDeclaration("med.tasks.structure.Task", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static Task newInstance(SModel sm) {
    return Task.newInstance(sm, false);
  }
}
