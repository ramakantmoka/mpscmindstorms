package med.logging.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractInferenceRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.InferenceRule_Runtime;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.intentions.BaseIntentionProvider;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.smodel.SModelUtil_new;

public class typeof_LogStatement2_InferenceRule extends AbstractInferenceRule_Runtime implements InferenceRule_Runtime {
  public typeof_LogStatement2_InferenceRule() {
  }

  public void applyRule(final SNode statement2, final TypeCheckingContext typeCheckingContext) {
    {
      SNode _nodeToCheck_1029348928467 = SLinkOperations.getTarget(statement2, "expr", true);
      BaseIntentionProvider intentionProvider = null;
      typeCheckingContext.createEquation((SNode)typeCheckingContext.typeOf(_nodeToCheck_1029348928467, "r:471aa32d-4dce-4344-b08e-30f8f6a785ed(med.logging.typesystem)", "3104433618259294701", true), (SNode)SConceptOperations.createNewNode("med.core.structure.GenericStringType", null), _nodeToCheck_1029348928467, null, "r:471aa32d-4dce-4344-b08e-30f8f6a785ed(med.logging.typesystem)", "3104433618259307044", intentionProvider);
    }
  }

  public String getApplicableConceptFQName() {
    return "med.logging.structure.LogStatement2";
  }

  public boolean isApplicable(SNode argument) {
    return SModelUtil_new.isAssignableConcept(argument.getConceptFqName(), this.getApplicableConceptFQName());
  }

  public boolean overrides() {
    return false;
  }
}
