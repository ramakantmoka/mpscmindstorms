package med.external.generator.template.main;

/*Generated by MPS */

import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.generator.template.MappingScriptContext;
import java.util.List;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import med.core.behavior.ExternalModule_Behavior;
import med.core.behavior.IContributesToHeader_Behavior;

public class QueriesGenerated {
  public static void mappingScript_CodeBlock_3454436015650806958(final IOperationContext operationContext, final MappingScriptContext _context) {
    List<SNode> resources = SModelOperations.getRoots(_context.getModel(), "med.core.structure.Resource");
    for (SNode resource : ListSequence.fromList(resources)) {
      SLinkOperations.removeAllChildren(resource, "internals");
      for (SNode em : ListSequence.fromList(SLinkOperations.getTargets(resource, "modules", true)).where(new IWhereFilter<SNode>() {
        public boolean accept(SNode it) {
          return SNodeOperations.isInstanceOf(it, "med.core.structure.ExternalModule");
        }
      })) {
        if (!(ExternalModule_Behavior.call_representsExternalHeaderFile_7647825645222690352(SNodeOperations.cast(em, "med.core.structure.ExternalModule")))) {
          List<SNode> headerContributors = SNodeOperations.getDescendants(em, "med.core.structure.IContributesToHeader", false, new String[]{});
          for (SNode el : ListSequence.fromList(headerContributors)) {
            SLinkOperations.addChild(resource, "internals", IContributesToHeader_Behavior.call_getHeaderContent_8772584333841904462(el));
          }
        }
      }
    }
  }
}
