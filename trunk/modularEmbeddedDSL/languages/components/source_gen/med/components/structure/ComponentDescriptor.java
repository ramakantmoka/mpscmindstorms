package med.components.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ComponentDescriptor extends BaseConcept {
  public static final String concept = "med.components.structure.ComponentDescriptor";
  public static final String IMPLEMENTATION = "implementation";
  public static final String COMPONENT = "component";

  public ComponentDescriptor(SNode node) {
    super(node);
  }

  public ComponentImplementation getImplementation() {
    return (ComponentImplementation)this.getReferent(ComponentImplementation.class, ComponentDescriptor.IMPLEMENTATION);
  }

  public void setImplementation(ComponentImplementation node) {
    super.setReferent(ComponentDescriptor.IMPLEMENTATION, node);
  }

  public Component getComponent() {
    return (Component)this.getReferent(Component.class, ComponentDescriptor.COMPONENT);
  }

  public void setComponent(Component node) {
    super.setReferent(ComponentDescriptor.COMPONENT, node);
  }

  public static ComponentDescriptor newInstance(SModel sm, boolean init) {
    return (ComponentDescriptor)SModelUtil_new.instantiateConceptDeclaration("med.components.structure.ComponentDescriptor", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ComponentDescriptor newInstance(SModel sm) {
    return ComponentDescriptor.newInstance(sm, false);
  }
}
