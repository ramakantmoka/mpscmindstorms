package med.components.structure;

/*Generated by MPS */

import med.core.structure.Expression;
import med.core.structure.IVariableReference;
import jetbrains.mps.smodel.SNode;
import med.core.structure.ProcedureParameter;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class InterfaceProcParameterReference extends Expression implements IVariableReference {
  public static final String concept = "med.components.structure.InterfaceProcParameterReference";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String PARAM = "param";

  public InterfaceProcParameterReference(SNode node) {
    super(node);
  }

  public String getName() {
    return this.getProperty(InterfaceProcParameterReference.NAME);
  }

  public void setName(String value) {
    this.setProperty(InterfaceProcParameterReference.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(InterfaceProcParameterReference.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(InterfaceProcParameterReference.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(InterfaceProcParameterReference.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(InterfaceProcParameterReference.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(InterfaceProcParameterReference.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(InterfaceProcParameterReference.VIRTUAL_PACKAGE, value);
  }

  public ProcedureParameter getParam() {
    return (ProcedureParameter) this.getReferent(ProcedureParameter.class, InterfaceProcParameterReference.PARAM);
  }

  public void setParam(ProcedureParameter node) {
    super.setReferent(InterfaceProcParameterReference.PARAM, node);
  }

  public static InterfaceProcParameterReference newInstance(SModel sm, boolean init) {
    return (InterfaceProcParameterReference) SModelUtil_new.instantiateConceptDeclaration("med.components.structure.InterfaceProcParameterReference", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static InterfaceProcParameterReference newInstance(SModel sm) {
    return InterfaceProcParameterReference.newInstance(sm, false);
  }
}
