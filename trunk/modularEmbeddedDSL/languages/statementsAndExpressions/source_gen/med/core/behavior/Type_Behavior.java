package med.core.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.smodel.behaviour.BehaviorManager;

public class Type_Behavior {
  private static Class[] PARAMETERS_5223430962849766361 = {SNode.class};

  public static void init(SNode thisNode) {
  }

  public static String virtual_typename_5223430962849766361(SNode thisNode) {
    Iterable<SNode> seq = ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.getConceptDeclaration(thisNode), "propertyDeclaration", true)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SPropertyOperations.getString(it, "name") == "name";
      }
    });
    if (Sequence.fromIterable(seq).isNotEmpty()) {
      return SPropertyOperations.getString(SNodeOperations.getConceptDeclaration(thisNode), "name");
    }
    return SPropertyOperations.getString(SNodeOperations.getConceptDeclaration(thisNode), "name");
  }

  public static String call_typename_5223430962849766361(SNode thisNode) {
    return (String)BehaviorManager.getInstance().invoke(Object.class, SNodeOperations.cast(thisNode, "med.core.structure.Type"), "virtual_typename_5223430962849766361", PARAMETERS_5223430962849766361);
  }

  public static String callSuper_typename_5223430962849766361(SNode thisNode, String callerConceptFqName) {
    return (String)BehaviorManager.getInstance().invokeSuper(Object.class, SNodeOperations.cast(thisNode, "med.core.structure.Type"), callerConceptFqName, "virtual_typename_5223430962849766361", PARAMETERS_5223430962849766361);
  }
}
