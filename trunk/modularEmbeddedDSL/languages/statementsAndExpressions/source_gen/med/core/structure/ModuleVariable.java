package med.core.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ModuleVariable extends MedBase implements IModuleContent, IHasIdentifierName, IReduceToImplementation, IVariableDeclaration {
  public static final String concept = "med.core.structure.ModuleVariable";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String NAME = "name";
  public static final String INIT = "init";
  public static final String TYPE = "type";

  public ModuleVariable(SNode node) {
    super(node);
  }

  public String getShortDescription() {
    return this.getProperty(ModuleVariable.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(ModuleVariable.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(ModuleVariable.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(ModuleVariable.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(ModuleVariable.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(ModuleVariable.VIRTUAL_PACKAGE, value);
  }

  public String getName() {
    return this.getProperty(ModuleVariable.NAME);
  }

  public void setName(String value) {
    this.setProperty(ModuleVariable.NAME, value);
  }

  public Expression getInit() {
    return (Expression) this.getChild(Expression.class, ModuleVariable.INIT);
  }

  public void setInit(Expression node) {
    super.setChild(ModuleVariable.INIT, node);
  }

  public Type getType() {
    return (Type) this.getChild(Type.class, ModuleVariable.TYPE);
  }

  public void setType(Type node) {
    super.setChild(ModuleVariable.TYPE, node);
  }

  public static ModuleVariable newInstance(SModel sm, boolean init) {
    return (ModuleVariable) SModelUtil_new.instantiateConceptDeclaration("med.core.structure.ModuleVariable", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ModuleVariable newInstance(SModel sm) {
    return ModuleVariable.newInstance(sm, false);
  }
}
