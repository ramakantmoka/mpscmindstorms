package med.core.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class StructDeclaration extends BaseConcept implements IHasIdentifierName, IExportableModuleContent, IContributesToHeader {
  public static final String concept = "med.core.structure.StructDeclaration";
  public static final String OPTIONAL_LOW_LEVEL_NAME = "optionalLowLevelName";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String EXPORT = "export";
  public static final String ATTRIBUTES = "attributes";

  public StructDeclaration(SNode node) {
    super(node);
  }

  public String getOptionalLowLevelName() {
    return this.getProperty(StructDeclaration.OPTIONAL_LOW_LEVEL_NAME);
  }

  public void setOptionalLowLevelName(String value) {
    this.setProperty(StructDeclaration.OPTIONAL_LOW_LEVEL_NAME, value);
  }

  public String getName() {
    return this.getProperty(StructDeclaration.NAME);
  }

  public void setName(String value) {
    this.setProperty(StructDeclaration.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(StructDeclaration.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(StructDeclaration.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(StructDeclaration.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(StructDeclaration.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(StructDeclaration.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(StructDeclaration.VIRTUAL_PACKAGE, value);
  }

  public boolean getExport() {
    return this.getBooleanProperty(StructDeclaration.EXPORT);
  }

  public void setExport(boolean value) {
    this.setBooleanProperty(StructDeclaration.EXPORT, value);
  }

  public int getAttributesesCount() {
    return this.getChildCount(StructDeclaration.ATTRIBUTES);
  }

  public Iterator<StructAttribute> attributeses() {
    return this.children(StructAttribute.class, StructDeclaration.ATTRIBUTES);
  }

  public List<StructAttribute> getAttributeses() {
    return this.getChildren(StructAttribute.class, StructDeclaration.ATTRIBUTES);
  }

  public void addAttributes(StructAttribute node) {
    this.addChild(StructDeclaration.ATTRIBUTES, node);
  }

  public void insertAttributes(StructAttribute prev, StructAttribute node) {
    this.insertChild(prev, StructDeclaration.ATTRIBUTES, node);
  }

  public static StructDeclaration newInstance(SModel sm, boolean init) {
    return (StructDeclaration)SModelUtil_new.instantiateConceptDeclaration("med.core.structure.StructDeclaration", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static StructDeclaration newInstance(SModel sm) {
    return StructDeclaration.newInstance(sm, false);
  }
}
