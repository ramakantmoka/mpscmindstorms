package med.statemachine.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.Intention;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class addEvent_Intention extends BaseIntention implements Intention {
  public addEvent_Intention() {
  }

  public String getConcept() {
    return "med.statemachine.structure.Statemachine";
  }

  public boolean isParameterized() {
    return false;
  }

  public boolean isErrorIntention() {
    return false;
  }

  public boolean isAvailableInChildNodes() {
    return false;
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return "statemachine: add event";
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    SNode e = SConceptOperations.createNewNode("med.statemachine.structure.Event", null);
    SPropertyOperations.set(e, "name", "newEvent");
    ListSequence.fromList(SLinkOperations.getTargets(node, "events", true)).addElement(e);
  }

  public String getLocationString() {
    return "med.statemachine.intentions";
  }
}
