package med.statemachine.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.Intention;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;

public class addTransition_Intention extends BaseIntention implements Intention {
  public addTransition_Intention() {
  }

  public String getConcept() {
    return "med.statemachine.structure.Statemachine";
  }

  public boolean isParameterized() {
    return false;
  }

  public boolean isErrorIntention() {
    return false;
  }

  public boolean isAvailableInChildNodes() {
    return false;
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return "statemachine: add transition";
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    EditorCell c = editorContext.getSelectedCell();
    Object state = null;
    Object event = null;
    while (c != null) {
      state = c.getUserObject("state");
      event = c.getUserObject("event");
      if (state == null || event == null) {
        c = c.getParent();
      } else {
        SNode s = (SNode) state;
        SNode e = (SNode) event;
        SNode t = SConceptOperations.createNewNode("med.statemachine.structure.Transition", null);
        SNode trig = SConceptOperations.createNewNode("med.statemachine.structure.EventTrigger", null);
        SLinkOperations.setTarget(trig, "event", e, false);
        SLinkOperations.setTarget(t, "trigger", trig, true);
        ListSequence.fromList(SLinkOperations.getTargets(s, "transitions", true)).addElement(t);
        break;
      }
    }
  }

  public String getLocationString() {
    return "med.statemachine.intentions";
  }
}
