package med.features.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class StructuredFeatureDeclaration extends FeatureDeclaration {
  public static final String concept = "med.features.structure.StructuredFeatureDeclaration";
  public static final String FEATURES = "features";
  public static final String ATTRIBUTES = "attributes";

  public StructuredFeatureDeclaration(SNode node) {
    super(node);
  }

  public int getFeaturesesCount() {
    return this.getChildCount(StructuredFeatureDeclaration.FEATURES);
  }

  public Iterator<FeatureDeclaration> featureses() {
    return this.children(FeatureDeclaration.class, StructuredFeatureDeclaration.FEATURES);
  }

  public List<FeatureDeclaration> getFeatureses() {
    return this.getChildren(FeatureDeclaration.class, StructuredFeatureDeclaration.FEATURES);
  }

  public void addFeatures(FeatureDeclaration node) {
    this.addChild(StructuredFeatureDeclaration.FEATURES, node);
  }

  public void insertFeatures(FeatureDeclaration prev, FeatureDeclaration node) {
    this.insertChild(prev, StructuredFeatureDeclaration.FEATURES, node);
  }

  public int getAttributesesCount() {
    return this.getChildCount(StructuredFeatureDeclaration.ATTRIBUTES);
  }

  public Iterator<FeatureAttribute> attributeses() {
    return this.children(FeatureAttribute.class, StructuredFeatureDeclaration.ATTRIBUTES);
  }

  public List<FeatureAttribute> getAttributeses() {
    return this.getChildren(FeatureAttribute.class, StructuredFeatureDeclaration.ATTRIBUTES);
  }

  public void addAttributes(FeatureAttribute node) {
    this.addChild(StructuredFeatureDeclaration.ATTRIBUTES, node);
  }

  public void insertAttributes(FeatureAttribute prev, FeatureAttribute node) {
    this.insertChild(prev, StructuredFeatureDeclaration.ATTRIBUTES, node);
  }

  public static StructuredFeatureDeclaration newInstance(SModel sm, boolean init) {
    return (StructuredFeatureDeclaration) SModelUtil_new.instantiateConceptDeclaration("med.features.structure.StructuredFeatureDeclaration", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static StructuredFeatureDeclaration newInstance(SModel sm) {
    return StructuredFeatureDeclaration.newInstance(sm, false);
  }
}
