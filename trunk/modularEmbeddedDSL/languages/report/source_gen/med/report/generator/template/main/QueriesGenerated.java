package med.report.generator.template.main;

/*Generated by MPS */

import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class QueriesGenerated {
  public static Object propertyMacro_GetPropertyValue_8017791897008229412(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), "text");
  }

  public static Object propertyMacro_GetPropertyValue_8017791897008222170(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "Documentation for " + SPropertyOperations.getString(_context.getNode(), "name");
  }

  public static Object propertyMacro_GetPropertyValue_8017791897008229349(final IOperationContext operationContext, final PropertyMacroContext _context) {
    return "<h" + (ListSequence.fromList(SNodeOperations.getAncestors(_context.getNode(), null, false)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "med.report.structure.Chapter");
      }
    }).count() + 1) + ">" + SPropertyOperations.getString(_context.getNode(), "number") + "  " + SPropertyOperations.getString(_context.getNode(), "heading") + "</h" + (ListSequence.fromList(SNodeOperations.getAncestors(_context.getNode(), null, false)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "med.report.structure.Chapter");
      }
    }).count() + 1) + ">";
  }

  public static Iterable sourceNodesQuery_8017791897007929732(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "chapters", true);
  }

  public static Iterable sourceNodesQuery_8017791897008229390(final IOperationContext operationContext, final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getTargets(_context.getNode(), "contents", true);
  }
}
