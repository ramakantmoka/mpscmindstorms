package med.report.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class Chapter extends Content {
  public static final String concept = "med.report.structure.Chapter";
  public static final String NUMBER = "number";
  public static final String HEADING = "heading";
  public static final String CONTENTS = "contents";

  public Chapter(SNode node) {
    super(node);
  }

  public String getNumber() {
    return this.getProperty(Chapter.NUMBER);
  }

  public void setNumber(String value) {
    this.setProperty(Chapter.NUMBER, value);
  }

  public String getHeading() {
    return this.getProperty(Chapter.HEADING);
  }

  public void setHeading(String value) {
    this.setProperty(Chapter.HEADING, value);
  }

  public int getContentsesCount() {
    return this.getChildCount(Chapter.CONTENTS);
  }

  public Iterator<Content> contentses() {
    return this.children(Content.class, Chapter.CONTENTS);
  }

  public List<Content> getContentses() {
    return this.getChildren(Content.class, Chapter.CONTENTS);
  }

  public void addContents(Content node) {
    this.addChild(Chapter.CONTENTS, node);
  }

  public void insertContents(Content prev, Content node) {
    this.insertChild(prev, Chapter.CONTENTS, node);
  }

  public static Chapter newInstance(SModel sm, boolean init) {
    return (Chapter) SModelUtil_new.instantiateConceptDeclaration("med.report.structure.Chapter", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static Chapter newInstance(SModel sm) {
    return Chapter.newInstance(sm, false);
  }
}
