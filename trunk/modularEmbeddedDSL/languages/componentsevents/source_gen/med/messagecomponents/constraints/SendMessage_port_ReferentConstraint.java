package med.messagecomponents.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.constraints.BaseNodeReferenceSearchScopeProvider;
import jetbrains.mps.smodel.constraints.IModelConstraints;
import jetbrains.mps.smodel.constraints.ModelConstraintsManager;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.smodel.constraints.ReferentConstraintContext;
import med.messagecomponents.rt.MCHelper;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class SendMessage_port_ReferentConstraint extends BaseNodeReferenceSearchScopeProvider implements IModelConstraints {
  public SendMessage_port_ReferentConstraint() {
  }

  public void registerSelf(ModelConstraintsManager manager) {
    manager.registerNodeReferentSearchScopeProvider("med.messagecomponents.structure.SendMessage", "port", this);
  }

  public void unRegisterSelf(ModelConstraintsManager manager) {
    manager.unRegisterNodeReferentSearchScopeProvider("med.messagecomponents.structure.SendMessage", "port");
  }

  public Object createSearchScopeOrListOfNodes(final IOperationContext operationContext, final ReferentConstraintContext _context) {
    return MCHelper.providedMessagePorts(SLinkOperations.getTarget(SNodeOperations.getAncestor(_context.getEnclosingNode(), "med.components.structure.ComponentImplementation", false, false), "componentType", false));
  }
}
