package med.messagecomponents.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.constraints.BaseNodeReferenceSearchScopeProvider;
import jetbrains.mps.smodel.constraints.IModelConstraints;
import jetbrains.mps.smodel.constraints.ModelConstraintsManager;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.smodel.constraints.ReferentConstraintContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import med.messagecomponents.rt.MCHelper;

public class MessageTrigger_message_ReferentConstraint extends BaseNodeReferenceSearchScopeProvider implements IModelConstraints {
  public MessageTrigger_message_ReferentConstraint() {
  }

  public void registerSelf(ModelConstraintsManager manager) {
    manager.registerNodeReferentSearchScopeProvider("med.messagecomponents.structure.MessageTrigger", "message", this);
  }

  public void unRegisterSelf(ModelConstraintsManager manager) {
    manager.unRegisterNodeReferentSearchScopeProvider("med.messagecomponents.structure.MessageTrigger", "message");
  }

  public Object createSearchScopeOrListOfNodes(final IOperationContext operationContext, final ReferentConstraintContext _context) {
    SNode impl = SNodeOperations.getAncestor(_context.getEnclosingNode(), "med.components.structure.ComponentImplementation", true, false);
    SNode comp = SLinkOperations.getTarget(impl, "componentType", false);
    return MCHelper.incomingMessages(comp);
  }
}
