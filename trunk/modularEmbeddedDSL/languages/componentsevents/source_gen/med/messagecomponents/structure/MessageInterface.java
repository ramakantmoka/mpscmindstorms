package med.messagecomponents.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import med.core.structure.IExportableModuleContent;
import med.core.structure.IHasIdentifierName;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class MessageInterface extends BaseConcept implements IExportableModuleContent, IHasIdentifierName {
  public static final String concept = "med.messagecomponents.structure.MessageInterface";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String NAME = "name";
  public static final String EXPORT = "export";
  public static final String MESSAGES = "messages";

  public MessageInterface(SNode node) {
    super(node);
  }

  public String getShortDescription() {
    return this.getProperty(MessageInterface.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(MessageInterface.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(MessageInterface.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(MessageInterface.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(MessageInterface.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(MessageInterface.VIRTUAL_PACKAGE, value);
  }

  public String getName() {
    return this.getProperty(MessageInterface.NAME);
  }

  public void setName(String value) {
    this.setProperty(MessageInterface.NAME, value);
  }

  public boolean getExport() {
    return this.getBooleanProperty(MessageInterface.EXPORT);
  }

  public void setExport(boolean value) {
    this.setBooleanProperty(MessageInterface.EXPORT, value);
  }

  public int getMessagesesCount() {
    return this.getChildCount(MessageInterface.MESSAGES);
  }

  public Iterator<Message> messageses() {
    return this.children(Message.class, MessageInterface.MESSAGES);
  }

  public List<Message> getMessageses() {
    return this.getChildren(Message.class, MessageInterface.MESSAGES);
  }

  public void addMessages(Message node) {
    this.addChild(MessageInterface.MESSAGES, node);
  }

  public void insertMessages(Message prev, Message node) {
    this.insertChild(prev, MessageInterface.MESSAGES, node);
  }

  public static MessageInterface newInstance(SModel sm, boolean init) {
    return (MessageInterface) SModelUtil_new.instantiateConceptDeclaration("med.messagecomponents.structure.MessageInterface", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static MessageInterface newInstance(SModel sm) {
    return MessageInterface.newInstance(sm, false);
  }
}
