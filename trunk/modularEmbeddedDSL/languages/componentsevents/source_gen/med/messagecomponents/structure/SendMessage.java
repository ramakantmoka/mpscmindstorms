package med.messagecomponents.structure;

/*Generated by MPS */

import med.core.structure.Statement;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class SendMessage extends Statement {
  public static final String concept = "med.messagecomponents.structure.SendMessage";
  public static final String PORT = "port";
  public static final String MESSAGE = "message";

  public SendMessage(SNode node) {
    super(node);
  }

  public ProvidedMessagePort getPort() {
    return (ProvidedMessagePort)this.getReferent(ProvidedMessagePort.class, SendMessage.PORT);
  }

  public void setPort(ProvidedMessagePort node) {
    super.setReferent(SendMessage.PORT, node);
  }

  public Message getMessage() {
    return (Message)this.getReferent(Message.class, SendMessage.MESSAGE);
  }

  public void setMessage(Message node) {
    super.setReferent(SendMessage.MESSAGE, node);
  }

  public static SendMessage newInstance(SModel sm, boolean init) {
    return (SendMessage)SModelUtil_new.instantiateConceptDeclaration("med.messagecomponents.structure.SendMessage", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static SendMessage newInstance(SModel sm) {
    return SendMessage.newInstance(sm, false);
  }
}
