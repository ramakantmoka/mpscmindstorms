package ds.twowheel.structure;

/*Generated by MPS */

import med.core.structure.IHasIdentifierName;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class BlockStatement extends RSStatement implements IHasIdentifierName {
  public static final String concept = "ds.twowheel.structure.BlockStatement";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String BUMP_REACTION = "bumpReaction";
  public static final String STATEMENTS = "statements";

  public BlockStatement(SNode node) {
    super(node);
  }

  public String getName() {
    return this.getProperty(BlockStatement.NAME);
  }

  public void setName(String value) {
    this.setProperty(BlockStatement.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(BlockStatement.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(BlockStatement.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(BlockStatement.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(BlockStatement.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(BlockStatement.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(BlockStatement.VIRTUAL_PACKAGE, value);
  }

  public RSStatement getBumpReaction() {
    return (RSStatement) this.getChild(RSStatement.class, BlockStatement.BUMP_REACTION);
  }

  public void setBumpReaction(RSStatement node) {
    super.setChild(BlockStatement.BUMP_REACTION, node);
  }

  public int getStatementsesCount() {
    return this.getChildCount(BlockStatement.STATEMENTS);
  }

  public Iterator<RSStatement> statementses() {
    return this.children(RSStatement.class, BlockStatement.STATEMENTS);
  }

  public List<RSStatement> getStatementses() {
    return this.getChildren(RSStatement.class, BlockStatement.STATEMENTS);
  }

  public void addStatements(RSStatement node) {
    this.addChild(BlockStatement.STATEMENTS, node);
  }

  public void insertStatements(RSStatement prev, RSStatement node) {
    this.insertChild(prev, BlockStatement.STATEMENTS, node);
  }

  public static BlockStatement newInstance(SModel sm, boolean init) {
    return (BlockStatement) SModelUtil_new.instantiateConceptDeclaration("ds.twowheel.structure.BlockStatement", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static BlockStatement newInstance(SModel sm) {
    return BlockStatement.newInstance(sm, false);
  }
}
