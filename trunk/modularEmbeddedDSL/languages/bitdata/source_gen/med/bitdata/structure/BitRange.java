package med.bitdata.structure;

/*Generated by MPS */

import med.core.structure.MedBase;
import med.core.structure.IHasIdentifierName;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class BitRange extends MedBase implements IHasIdentifierName {
  public static final String concept = "med.bitdata.structure.BitRange";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String FROM = "from";
  public static final String TO = "to";

  public BitRange(SNode node) {
    super(node);
  }

  public String getName() {
    return this.getProperty(BitRange.NAME);
  }

  public void setName(String value) {
    this.setProperty(BitRange.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(BitRange.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(BitRange.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(BitRange.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(BitRange.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(BitRange.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(BitRange.VIRTUAL_PACKAGE, value);
  }

  public int getFrom() {
    return this.getIntegerProperty(BitRange.FROM);
  }

  public void setFrom(int value) {
    this.setIntegerProperty(BitRange.FROM, value);
  }

  public int getTo() {
    return this.getIntegerProperty(BitRange.TO);
  }

  public void setTo(int value) {
    this.setIntegerProperty(BitRange.TO, value);
  }

  public static BitRange newInstance(SModel sm, boolean init) {
    return (BitRange) SModelUtil_new.instantiateConceptDeclaration("med.bitdata.structure.BitRange", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static BitRange newInstance(SModel sm) {
    return BitRange.newInstance(sm, false);
  }
}
