package med.requirements.structure;

/*Generated by MPS */

import med.core.structure.MedBase;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class RequirementsTrace extends MedBase {
  public static final String concept = "med.requirements.structure.RequirementsTrace";
  public static final String LINKS = "links";

  public RequirementsTrace(SNode node) {
    super(node);
  }

  public int getLinksesCount() {
    return this.getChildCount(RequirementsTrace.LINKS);
  }

  public Iterator<TraceLink> linkses() {
    return this.children(TraceLink.class, RequirementsTrace.LINKS);
  }

  public List<TraceLink> getLinkses() {
    return this.getChildren(TraceLink.class, RequirementsTrace.LINKS);
  }

  public void addLinks(TraceLink node) {
    this.addChild(RequirementsTrace.LINKS, node);
  }

  public void insertLinks(TraceLink prev, TraceLink node) {
    this.insertChild(prev, RequirementsTrace.LINKS, node);
  }

  public static RequirementsTrace newInstance(SModel sm, boolean init) {
    return (RequirementsTrace) SModelUtil_new.instantiateConceptDeclaration("med.requirements.structure.RequirementsTrace", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static RequirementsTrace newInstance(SModel sm) {
    return RequirementsTrace.newInstance(sm, false);
  }
}
