package statemachine.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class EventParameterExpression extends Expression {
  public static final String concept = "statemachine.structure.EventParameterExpression";
  public static final String PARAM = "param";

  public EventParameterExpression(SNode node) {
    super(node);
  }

  public EventParameter getParam() {
    return (EventParameter)this.getReferent(EventParameter.class, EventParameterExpression.PARAM);
  }

  public void setParam(EventParameter node) {
    super.setReferent(EventParameterExpression.PARAM, node);
  }

  public static EventParameterExpression newInstance(SModel sm, boolean init) {
    return (EventParameterExpression)SModelUtil_new.instantiateConceptDeclaration("statemachine.structure.EventParameterExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static EventParameterExpression newInstance(SModel sm) {
    return EventParameterExpression.newInstance(sm, false);
  }
}
