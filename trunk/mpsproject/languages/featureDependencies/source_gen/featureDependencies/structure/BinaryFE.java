package featureDependencies.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class BinaryFE extends BaseFE {
  public static final String concept = "featureDependencies.structure.BinaryFE";
  public static final String RIGHT = "right";
  public static final String LEFT = "left";

  public BinaryFE(SNode node) {
    super(node);
  }

  public BaseFE getRight() {
    return (BaseFE)this.getChild(BaseFE.class, BinaryFE.RIGHT);
  }

  public void setRight(BaseFE node) {
    super.setChild(BinaryFE.RIGHT, node);
  }

  public BaseFE getLeft() {
    return (BaseFE)this.getChild(BaseFE.class, BinaryFE.LEFT);
  }

  public void setLeft(BaseFE node) {
    super.setChild(BinaryFE.LEFT, node);
  }

  public static BinaryFE newInstance(SModel sm, boolean init) {
    return (BinaryFE)SModelUtil_new.instantiateConceptDeclaration("featureDependencies.structure.BinaryFE", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static BinaryFE newInstance(SModel sm) {
    return BinaryFE.newInstance(sm, false);
  }
}
