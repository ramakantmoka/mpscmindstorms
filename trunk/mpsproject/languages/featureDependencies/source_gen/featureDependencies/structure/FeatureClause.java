package featureDependencies.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class FeatureClause extends BaseConcept {
  public static final String concept = "featureDependencies.structure.FeatureClause";
  public static final String IS_NEW = "isNew";
  public static final String EXPRESSION = "expression";

  public FeatureClause(SNode node) {
    super(node);
  }

  public boolean getIsNew() {
    return this.getBooleanProperty(FeatureClause.IS_NEW);
  }

  public void setIsNew(boolean value) {
    this.setBooleanProperty(FeatureClause.IS_NEW, value);
  }

  public BaseFE getExpression() {
    return (BaseFE)this.getChild(BaseFE.class, FeatureClause.EXPRESSION);
  }

  public void setExpression(BaseFE node) {
    super.setChild(FeatureClause.EXPRESSION, node);
  }

  public static FeatureClause newInstance(SModel sm, boolean init) {
    return (FeatureClause)SModelUtil_new.instantiateConceptDeclaration("featureDependencies.structure.FeatureClause", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static FeatureClause newInstance(SModel sm) {
    return FeatureClause.newInstance(sm, false);
  }
}
