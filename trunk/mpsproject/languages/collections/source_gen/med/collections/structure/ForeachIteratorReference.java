package med.collections.structure;

/*Generated by MPS */

import med.core.structure.Expression;
import med.core.structure.IVariableReference;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ForeachIteratorReference extends Expression implements IVariableReference {
  public static final String concept = "med.collections.structure.ForeachIteratorReference";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String FOREACH_ITERATOR = "foreachIterator";

  public ForeachIteratorReference(SNode node) {
    super(node);
  }

  public String getName() {
    return this.getProperty(ForeachIteratorReference.NAME);
  }

  public void setName(String value) {
    this.setProperty(ForeachIteratorReference.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(ForeachIteratorReference.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(ForeachIteratorReference.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(ForeachIteratorReference.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(ForeachIteratorReference.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(ForeachIteratorReference.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(ForeachIteratorReference.VIRTUAL_PACKAGE, value);
  }

  public ForeachIteratorDeclaration getForeachIterator() {
    return (ForeachIteratorDeclaration)this.getReferent(ForeachIteratorDeclaration.class, ForeachIteratorReference.FOREACH_ITERATOR);
  }

  public void setForeachIterator(ForeachIteratorDeclaration node) {
    super.setReferent(ForeachIteratorReference.FOREACH_ITERATOR, node);
  }

  public static ForeachIteratorReference newInstance(SModel sm, boolean init) {
    return (ForeachIteratorReference)SModelUtil_new.instantiateConceptDeclaration("med.collections.structure.ForeachIteratorReference", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ForeachIteratorReference newInstance(SModel sm) {
    return ForeachIteratorReference.newInstance(sm, false);
  }
}
