package med.tasks.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;

public class SchedulingPolicyKeepAliveInBackground_Editor extends DefaultNodeEditor {
  public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
    return this.createCollection_7767_0(editorContext, node);
  }

  private EditorCell createCollection_7767_0(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_7767_0");
    editorCell.addEditorCell(this.createConstant_7767_0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_7767_1(editorContext, node));
    return editorCell;
  }

  private EditorCell createConstant_7767_0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "scheduled");
    editorCell.setCellId("Constant_7767_0");
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createConstant_7767_1(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "alwaysRunningInBackground");
    editorCell.setCellId("Constant_7767_1");
    editorCell.setDefaultText("");
    return editorCell;
  }
}
