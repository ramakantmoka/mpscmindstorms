package med.core.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.List;
import java.util.Set;
import jetbrains.mps.internal.collections.runtime.SetSequence;
import java.util.HashSet;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;

public class Resource_Behavior {
  public static void init(SNode thisNode) {
    SLinkOperations.addNewChild(thisNode, "projectionLevels", "med.core.structure.ProjectionLevelAll");
    SLinkOperations.addNewChild(thisNode, "projectionLevels", "med.core.structure.ProjectionLevelOutline");
    SLinkOperations.addNewChild(thisNode, "projectionLevels", "med.core.structure.ProjectionLevelArchitecture");
  }

  public static String call_cFileName_306587673255505640(SNode thisNode) {
    return SPropertyOperations.getString(thisNode, "name");
  }

  public static String call_hFileName_306587673255505648(SNode thisNode) {
    if (Resource_Behavior.call_isExternal_7647825645223972886(thisNode)) {
      SNode mod = SNodeOperations.cast(ListSequence.fromList(ListSequence.fromList(SLinkOperations.getTargets(thisNode, "modules", true)).toListSequence()).getElement(0), "med.core.structure.ExternalModule");
      if (ExternalModule_Behavior.call_representsExternalHeaderFile_7647825645222690352(mod)) {
        return SPropertyOperations.getString(mod, "existingHeaderFile");
      }
    }
    return "include/" + SPropertyOperations.getString(thisNode, "name");
  }

  public static List<SNode> call_usedResources_5320189530627158238(SNode thisNode) {
    Set<SNode> res = SetSequence.fromSet(new HashSet<SNode>());
    for (SNode m : SLinkOperations.getTargets(thisNode, "modules", true)) {
      for (SNode i : SLinkOperations.getTargets(m, "imports", true)) {
        SetSequence.fromSet(res).addElement(SNodeOperations.cast(SNodeOperations.getParent(SLinkOperations.getTarget(i, "importedModule", false)), "med.core.structure.Resource"));
      }
    }
    SetSequence.fromSet(res).removeElement(thisNode);
    return SetSequence.fromSet(res).toListSequence();
  }

  public static boolean call_isExternal_7647825645223972886(SNode thisNode) {
    return (ListSequence.fromList(SLinkOperations.getTargets(thisNode, "modules", true)).count() == 1) && ListSequence.fromList(SLinkOperations.getTargets(thisNode, "modules", true)).any(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "med.core.structure.ExternalModule");
      }
    });
  }
}
