package med.core.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class AssignmentStatement extends Statement {
  public static final String concept = "med.core.structure.AssignmentStatement";
  public static final String LVALUE = "lvalue";
  public static final String RVALUE = "rvalue";

  public AssignmentStatement(SNode node) {
    super(node);
  }

  public ILValue getLvalue() {
    return (ILValue)this.getChild(ILValue.class, AssignmentStatement.LVALUE);
  }

  public void setLvalue(ILValue node) {
    super.setChild(AssignmentStatement.LVALUE, node);
  }

  public Expression getRvalue() {
    return (Expression)this.getChild(Expression.class, AssignmentStatement.RVALUE);
  }

  public void setRvalue(Expression node) {
    super.setChild(AssignmentStatement.RVALUE, node);
  }

  public static AssignmentStatement newInstance(SModel sm, boolean init) {
    return (AssignmentStatement)SModelUtil_new.instantiateConceptDeclaration("med.core.structure.AssignmentStatement", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static AssignmentStatement newInstance(SModel sm) {
    return AssignmentStatement.newInstance(sm, false);
  }
}
