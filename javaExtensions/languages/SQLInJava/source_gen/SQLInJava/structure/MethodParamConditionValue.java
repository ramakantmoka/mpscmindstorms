package SQLInJava.structure;

/*Generated by MPS */

import tomSQL.structure.WhereCondValue;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.ParameterDeclaration;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class MethodParamConditionValue extends WhereCondValue {
  public static final String concept = "SQLInJava.structure.MethodParamConditionValue";
  public static final String PARAM = "param";

  public MethodParamConditionValue(SNode node) {
    super(node);
  }

  public ParameterDeclaration getParam() {
    return (ParameterDeclaration)this.getReferent(ParameterDeclaration.class, MethodParamConditionValue.PARAM);
  }

  public void setParam(ParameterDeclaration node) {
    super.setReferent(MethodParamConditionValue.PARAM, node);
  }

  public static MethodParamConditionValue newInstance(SModel sm, boolean init) {
    return (MethodParamConditionValue)SModelUtil_new.instantiateConceptDeclaration("SQLInJava.structure.MethodParamConditionValue", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static MethodParamConditionValue newInstance(SModel sm) {
    return MethodParamConditionValue.newInstance(sm, false);
  }
}
