package med.core.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class IfStatement extends Statement {
  public static final String concept = "med.core.structure.IfStatement";
  public static final String THEN_PART = "thenPart";
  public static final String CONDITION = "condition";
  public static final String ELSE_PART = "elsePart";
  public static final String ELSE_IFS = "elseIfs";

  public IfStatement(SNode node) {
    super(node);
  }

  public StatementList getThenPart() {
    return (StatementList) this.getChild(StatementList.class, IfStatement.THEN_PART);
  }

  public void setThenPart(StatementList node) {
    super.setChild(IfStatement.THEN_PART, node);
  }

  public Expression getCondition() {
    return (Expression) this.getChild(Expression.class, IfStatement.CONDITION);
  }

  public void setCondition(Expression node) {
    super.setChild(IfStatement.CONDITION, node);
  }

  public StatementList getElsePart() {
    return (StatementList) this.getChild(StatementList.class, IfStatement.ELSE_PART);
  }

  public void setElsePart(StatementList node) {
    super.setChild(IfStatement.ELSE_PART, node);
  }

  public int getElseIfsesCount() {
    return this.getChildCount(IfStatement.ELSE_IFS);
  }

  public Iterator<ElseIfPart> elseIfses() {
    return this.children(ElseIfPart.class, IfStatement.ELSE_IFS);
  }

  public List<ElseIfPart> getElseIfses() {
    return this.getChildren(ElseIfPart.class, IfStatement.ELSE_IFS);
  }

  public void addElseIfs(ElseIfPart node) {
    this.addChild(IfStatement.ELSE_IFS, node);
  }

  public void insertElseIfs(ElseIfPart prev, ElseIfPart node) {
    this.insertChild(prev, IfStatement.ELSE_IFS, node);
  }

  public static IfStatement newInstance(SModel sm, boolean init) {
    return (IfStatement) SModelUtil_new.instantiateConceptDeclaration("med.core.structure.IfStatement", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static IfStatement newInstance(SModel sm) {
    return IfStatement.newInstance(sm, false);
  }
}
