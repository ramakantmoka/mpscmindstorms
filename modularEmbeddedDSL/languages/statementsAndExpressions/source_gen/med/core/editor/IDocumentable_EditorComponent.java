package med.core.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.AbstractCellProvider;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.style.Style;
import jetbrains.mps.nodeEditor.style.StyleAttributes;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.nodeEditor.cells.EditorCell_Property;
import jetbrains.mps.nodeEditor.cells.ModelAccessor;
import med.core.behavior.IDocumentable_Behavior;
import jetbrains.mps.util.EqualUtil;
import jetbrains.mps.nodeEditor.CellActionType;
import jetbrains.mps.nodeEditor.cellActions.CellAction_Empty;
import jetbrains.mps.nodeEditor.cells.EditorCell_Indent;
import jetbrains.mps.nodeEditor.cells.EditorCell_Component;
import javax.swing.JComponent;
import med.core.rt.SwingUtil;

public class IDocumentable_EditorComponent extends AbstractCellProvider {
  public IDocumentable_EditorComponent(SNode node) {
    super(node);
  }

  public EditorCell createEditorCell(EditorContext editorContext) {
    return this.createEditorCell(editorContext, this.getSNode());
  }

  public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
    return this.createCollection_1759_0(editorContext, node);
  }

  private EditorCell createCollection_1759_0(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createVertical(editorContext, node);
    editorCell.setCellId("Collection_1759_0");
    editorCell.addEditorCell(this.createConstant_1759_0(editorContext, node));
    editorCell.addEditorCell(this.createCollection_1759_1(editorContext, node));
    editorCell.addEditorCell(this.createCollection_1759_2(editorContext, node));
    return editorCell;
  }

  private EditorCell createCollection_1759_1(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(editorContext, node);
    editorCell.setCellId("Collection_1759_1");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.SELECTABLE, false);
    }
    editorCell.addEditorCell(this.createIndentCell1759_0(editorContext, node));
    editorCell.addEditorCell(this.createReadOnlyModelAccessor_1759_0(editorContext, node));
    return editorCell;
  }

  private EditorCell createCollection_1759_2(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createHorizontal(editorContext, node);
    editorCell.setCellId("Collection_1759_2");
    {
      Style style = editorCell.getStyle();
      style.set(StyleAttributes.SELECTABLE, false);
    }
    editorCell.addEditorCell(this.createIndentCell1759_1(editorContext, node));
    editorCell.addEditorCell(this.createJComponent_1759_0(editorContext, node));
    return editorCell;
  }

  private EditorCell createConstant_1759_0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "Documentation");
    editorCell.setCellId("Constant_1759_0");
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createReadOnlyModelAccessor_1759_0(final EditorContext editorContext, final SNode node) {
    EditorCell_Property editorCell = EditorCell_Property.create(editorContext, new ModelAccessor() {
      public String getText() {
        return IDocumentable_Behavior.call_previewText_6790227271037951885(node);
      }

      public void setText(String s) {
      }

      public boolean isValidText(String s) {
        return EqualUtil.equals(s, this.getText());
      }
    }, node);
    editorCell.setAction(CellActionType.DELETE, new CellAction_Empty());
    editorCell.setCellId("ReadOnlyModelAccessor_1759_0");
    return editorCell;
  }

  private EditorCell createIndentCell1759_0(EditorContext editorContext, SNode node) {
    EditorCell_Indent result = new EditorCell_Indent(editorContext, node);
    return result;
  }

  private EditorCell createIndentCell1759_1(EditorContext editorContext, SNode node) {
    EditorCell_Indent result = new EditorCell_Indent(editorContext, node);
    return result;
  }

  private EditorCell createJComponent_1759_0(EditorContext editorContext, SNode node) {
    EditorCell editorCell = EditorCell_Component.createComponentCell(editorContext, node, IDocumentable_EditorComponent._QueryFunction_JComponent_1759_0(node, editorContext), "_1759_0");
    editorCell.setCellId("JComponent_1759_0");
    return editorCell;
  }

  private static JComponent _QueryFunction_JComponent_1759_0(SNode node, EditorContext editorContext) {
    return SwingUtil.getComponent(editorContext, node);
  }
}
