package med.statemachine.structure;

/*Generated by MPS */

import med.core.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class CheckStateExpression extends Expression {
  public static final String concept = "med.statemachine.structure.CheckStateExpression";
  public static final String STATE = "state";
  public static final String MACHINE = "machine";

  public CheckStateExpression(SNode node) {
    super(node);
  }

  public State getState() {
    return (State)this.getReferent(State.class, CheckStateExpression.STATE);
  }

  public void setState(State node) {
    super.setReferent(CheckStateExpression.STATE, node);
  }

  public Statemachine getMachine() {
    return (Statemachine)this.getReferent(Statemachine.class, CheckStateExpression.MACHINE);
  }

  public void setMachine(Statemachine node) {
    super.setReferent(CheckStateExpression.MACHINE, node);
  }

  public static CheckStateExpression newInstance(SModel sm, boolean init) {
    return (CheckStateExpression)SModelUtil_new.instantiateConceptDeclaration("med.statemachine.structure.CheckStateExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static CheckStateExpression newInstance(SModel sm) {
    return CheckStateExpression.newInstance(sm, false);
  }
}
