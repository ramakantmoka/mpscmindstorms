package med.statemachine.structure;

/*Generated by MPS */

import med.core.structure.Statement;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class FireEventStatement extends Statement {
  public static final String concept = "med.statemachine.structure.FireEventStatement";
  public static final String TRIGGER = "trigger";
  public static final String MACHINE = "machine";

  public FireEventStatement(SNode node) {
    super(node);
  }

  public Event getTrigger() {
    return (Event) this.getReferent(Event.class, FireEventStatement.TRIGGER);
  }

  public void setTrigger(Event node) {
    super.setReferent(FireEventStatement.TRIGGER, node);
  }

  public Statemachine getMachine() {
    return (Statemachine) this.getReferent(Statemachine.class, FireEventStatement.MACHINE);
  }

  public void setMachine(Statemachine node) {
    super.setReferent(FireEventStatement.MACHINE, node);
  }

  public static FireEventStatement newInstance(SModel sm, boolean init) {
    return (FireEventStatement) SModelUtil_new.instantiateConceptDeclaration("med.statemachine.structure.FireEventStatement", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static FireEventStatement newInstance(SModel sm) {
    return FireEventStatement.newInstance(sm, false);
  }
}
