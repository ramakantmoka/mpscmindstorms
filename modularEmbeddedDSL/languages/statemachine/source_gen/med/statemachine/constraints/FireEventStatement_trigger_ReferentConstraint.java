package med.statemachine.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.constraints.BaseNodeReferenceSearchScopeProvider;
import jetbrains.mps.smodel.constraints.IModelConstraints;
import jetbrains.mps.smodel.constraints.ModelConstraintsManager;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.smodel.constraints.ReferentConstraintContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class FireEventStatement_trigger_ReferentConstraint extends BaseNodeReferenceSearchScopeProvider implements IModelConstraints {
  public FireEventStatement_trigger_ReferentConstraint() {
  }

  public void registerSelf(ModelConstraintsManager manager) {
    manager.registerNodeReferentSearchScopeProvider("med.statemachine.structure.FireEventStatement", "trigger", this);
  }

  public void unRegisterSelf(ModelConstraintsManager manager) {
    manager.unRegisterNodeReferentSearchScopeProvider("med.statemachine.structure.FireEventStatement", "trigger");
  }

  public Object createSearchScopeOrListOfNodes(final IOperationContext operationContext, final ReferentConstraintContext _context) {
    if (SLinkOperations.getTarget(_context.getReferenceNode(), "machine", false) != null) {
      return SLinkOperations.getTargets(SLinkOperations.getTarget(_context.getReferenceNode(), "machine", false), "events", true);
    } else {
      return null;
    }
  }
}
