package med.features.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ReplacementFeatureClause extends AbstractFeatureClause {
  public static final String concept = "med.features.structure.ReplacementFeatureClause";
  public static final String REPLACEMENT_NODE = "replacementNode";

  public ReplacementFeatureClause(SNode node) {
    super(node);
  }

  public BaseConcept getReplacementNode() {
    return (BaseConcept)this.getChild(BaseConcept.class, ReplacementFeatureClause.REPLACEMENT_NODE);
  }

  public void setReplacementNode(BaseConcept node) {
    super.setChild(ReplacementFeatureClause.REPLACEMENT_NODE, node);
  }

  public static ReplacementFeatureClause newInstance(SModel sm, boolean init) {
    return (ReplacementFeatureClause)SModelUtil_new.instantiateConceptDeclaration("med.features.structure.ReplacementFeatureClause", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ReplacementFeatureClause newInstance(SModel sm) {
    return ReplacementFeatureClause.newInstance(sm, false);
  }
}
