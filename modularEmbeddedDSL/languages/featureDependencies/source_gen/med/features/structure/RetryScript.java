package med.features.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class RetryScript extends BaseConcept {
  public static final String concept = "med.features.structure.RetryScript";
  public static final String STEPS = "steps";

  public RetryScript(SNode node) {
    super(node);
  }

  public int getStepsesCount() {
    return this.getChildCount(RetryScript.STEPS);
  }

  public Iterator<RetryStep> stepses() {
    return this.children(RetryStep.class, RetryScript.STEPS);
  }

  public List<RetryStep> getStepses() {
    return this.getChildren(RetryStep.class, RetryScript.STEPS);
  }

  public void addSteps(RetryStep node) {
    this.addChild(RetryScript.STEPS, node);
  }

  public void insertSteps(RetryStep prev, RetryStep node) {
    this.insertChild(prev, RetryScript.STEPS, node);
  }

  public static RetryScript newInstance(SModel sm, boolean init) {
    return (RetryScript) SModelUtil_new.instantiateConceptDeclaration("med.features.structure.RetryScript", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static RetryScript newInstance(SModel sm) {
    return RetryScript.newInstance(sm, false);
  }
}
