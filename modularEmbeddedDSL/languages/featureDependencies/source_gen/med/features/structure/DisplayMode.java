package med.features.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class DisplayMode extends BaseConcept {
  public static final String concept = "med.features.structure.DisplayMode";
  public static final String SHOW_FEATURE_CLAUSE = "showFeatureClause";
  public static final String HIGHLIGHT_FEATURE_DEPENDENT_NODES = "highlightFeatureDependentNodes";
  public static final String REMOVE_NON_SELECTED_STUFF_IN_EDITOR = "removeNonSelectedStuffInEditor";

  public DisplayMode(SNode node) {
    super(node);
  }

  public boolean getShowFeatureClause() {
    return this.getBooleanProperty(DisplayMode.SHOW_FEATURE_CLAUSE);
  }

  public void setShowFeatureClause(boolean value) {
    this.setBooleanProperty(DisplayMode.SHOW_FEATURE_CLAUSE, value);
  }

  public boolean getHighlightFeatureDependentNodes() {
    return this.getBooleanProperty(DisplayMode.HIGHLIGHT_FEATURE_DEPENDENT_NODES);
  }

  public void setHighlightFeatureDependentNodes(boolean value) {
    this.setBooleanProperty(DisplayMode.HIGHLIGHT_FEATURE_DEPENDENT_NODES, value);
  }

  public boolean getRemoveNonSelectedStuffInEditor() {
    return this.getBooleanProperty(DisplayMode.REMOVE_NON_SELECTED_STUFF_IN_EDITOR);
  }

  public void setRemoveNonSelectedStuffInEditor(boolean value) {
    this.setBooleanProperty(DisplayMode.REMOVE_NON_SELECTED_STUFF_IN_EDITOR, value);
  }

  public static DisplayMode newInstance(SModel sm, boolean init) {
    return (DisplayMode)SModelUtil_new.instantiateConceptDeclaration("med.features.structure.DisplayMode", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static DisplayMode newInstance(SModel sm) {
    return DisplayMode.newInstance(sm, false);
  }
}
