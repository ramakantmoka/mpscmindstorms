package med.features.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.Intention;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class addChildFeature_Intention extends BaseIntention implements Intention {
  public addChildFeature_Intention() {
  }

  public String getConcept() {
    return "med.features.structure.StructuredFeatureDeclaration";
  }

  public boolean isParameterized() {
    return false;
  }

  public boolean isErrorIntention() {
    return false;
  }

  public boolean isAvailableInChildNodes() {
    return false;
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return "add child";
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    SNode comp = SConceptOperations.createNewNode("med.features.structure.CompositeFeatureDeclaration", null);
    SLinkOperations.addChild(node, "features", comp);
    editorContext.select(comp);
  }

  public String getLocationString() {
    return "med.features.intentions";
  }
}
