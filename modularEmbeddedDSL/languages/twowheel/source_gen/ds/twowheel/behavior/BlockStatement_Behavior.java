package ds.twowheel.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.List;
import java.util.ArrayList;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class BlockStatement_Behavior {
  public static void init(SNode thisNode) {
  }

  public static List<SNode> virtual_linearizedStatements_6177678091394296758(SNode thisNode) {
    List<SNode> res = new ArrayList<SNode>();
    for (SNode s : ListSequence.fromList(SLinkOperations.getTargets(thisNode, "statements", true))) {
      ListSequence.fromList(res).addSequence(ListSequence.fromList(RSStatement_Behavior.call_linearizedStatements_6177678091394296758(s)));
    }
    if (SLinkOperations.getTarget(thisNode, "bumpReaction", true) != null) {
      ListSequence.fromList(res).addSequence(ListSequence.fromList(RSStatement_Behavior.call_linearizedStatements_6177678091394296758(SLinkOperations.getTarget(thisNode, "bumpReaction", true))));
    }
    return res;
  }

  public static SNode virtual_effectiveStep_5296414764969568700(SNode thisNode) {
    return ListSequence.fromList(SLinkOperations.getTargets(thisNode, "statements", true)).first();
  }

  public static SNode virtual_bumpReaction_6177678091395801141(SNode thisNode) {
    //  return our own reaction if we have one
    if (SLinkOperations.getTarget(thisNode, "bumpReaction", true) != null) {
      return SLinkOperations.getTarget(thisNode, "bumpReaction", true);
    }
    //  if we are a direct child of a block and we're the block's 
    //  bump reaction, then DO NOT INHERIT the parent block's reaction
    //  otherwise return the owning block's reaction
    SNode owningBlock = SNodeOperations.getAncestor(thisNode, "ds.twowheel.structure.BlockStatement", false, false);
    if (owningBlock != null) {
      if (SNodeOperations.hasRole(thisNode, "ds.twowheel.structure.BlockStatement", "bumpReaction")) {
        return SLinkOperations.getTarget(thisNode, "bumpReaction", true);
      }
      return SLinkOperations.getTarget(owningBlock, "bumpReaction", true);
    }
    return null;
  }
}
