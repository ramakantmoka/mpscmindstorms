package med.bitdata.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class BitPatternType extends GenericBitPatternType {
  public static final String concept = "med.bitdata.structure.BitPatternType";
  public static final String PATTERN = "pattern";

  public BitPatternType(SNode node) {
    super(node);
  }

  public BitPatternDeclaration getPattern() {
    return (BitPatternDeclaration)this.getReferent(BitPatternDeclaration.class, BitPatternType.PATTERN);
  }

  public void setPattern(BitPatternDeclaration node) {
    super.setReferent(BitPatternType.PATTERN, node);
  }

  public static BitPatternType newInstance(SModel sm, boolean init) {
    return (BitPatternType)SModelUtil_new.instantiateConceptDeclaration("med.bitdata.structure.BitPatternType", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static BitPatternType newInstance(SModel sm) {
    return BitPatternType.newInstance(sm, false);
  }
}
