package med.components.structure;

/*Generated by MPS */

import med.core.structure.ProcedureCall;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class PortProcedureCall extends ProcedureCall {
  public static final String concept = "med.components.structure.PortProcedureCall";
  public static final String PORT_EXPRESSION = "portExpression";

  public PortProcedureCall(SNode node) {
    super(node);
  }

  public InterfaceProcedure getProcedure() {
    return this.ensureAdapter(InterfaceProcedure.class, "procedure", this.getProcedure());
  }

  public void setProcedure(InterfaceProcedure node) {
    this.setProcedure(node);
  }

  public PortAdapterExpression getPortExpression() {
    return (PortAdapterExpression) this.getChild(PortAdapterExpression.class, PortProcedureCall.PORT_EXPRESSION);
  }

  public void setPortExpression(PortAdapterExpression node) {
    super.setChild(PortProcedureCall.PORT_EXPRESSION, node);
  }

  public static PortProcedureCall newInstance(SModel sm, boolean init) {
    return (PortProcedureCall) SModelUtil_new.instantiateConceptDeclaration("med.components.structure.PortProcedureCall", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static PortProcedureCall newInstance(SModel sm) {
    return PortProcedureCall.newInstance(sm, false);
  }
}
