package med.components.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.constraints.BaseNodeReferenceSearchScopeProvider;
import jetbrains.mps.smodel.constraints.IModelConstraints;
import jetbrains.mps.smodel.constraints.ModelConstraintsManager;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.smodel.constraints.ReferentConstraintContext;
import med.components.behavior.Component_Behavior;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class InterfaceProcedureImplementation_procedure_ReferentConstraint extends BaseNodeReferenceSearchScopeProvider implements IModelConstraints {
  public InterfaceProcedureImplementation_procedure_ReferentConstraint() {
  }

  public void registerSelf(ModelConstraintsManager manager) {
    manager.registerNodeReferentSearchScopeProvider("med.components.structure.InterfaceProcedureImplementation", "procedure", this);
  }

  public void unRegisterSelf(ModelConstraintsManager manager) {
    manager.unRegisterNodeReferentSearchScopeProvider("med.components.structure.InterfaceProcedureImplementation", "procedure");
  }

  public Object createSearchScopeOrListOfNodes(final IOperationContext operationContext, final ReferentConstraintContext _context) {
    return Component_Behavior.call_allProcedures_2739617086186422653(SLinkOperations.getTarget(SNodeOperations.getAncestor(_context.getReferenceNode(), "med.components.structure.ComponentImplementation", false, false), "componentType", false));
  }
}
