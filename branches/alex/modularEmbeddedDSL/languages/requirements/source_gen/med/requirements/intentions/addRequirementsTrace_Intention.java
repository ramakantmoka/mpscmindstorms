package med.requirements.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.AttributesRolesUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class addRequirementsTrace_Intention extends BaseIntention {
  public addRequirementsTrace_Intention() {
  }

  public String getConcept() {
    return "med.core.structure.MedBase";
  }

  public boolean isParameterized() {
    return false;
  }

  public boolean isErrorIntention() {
    return false;
  }

  public boolean isAvailableInChildNodes() {
    return false;
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return "trace: add";
  }

  public boolean isApplicable(final SNode node, final EditorContext editorContext) {
    if (!(this.isApplicableToNode(node, editorContext))) {
      return false;
    }
    return true;
  }

  public boolean isApplicableToNode(final SNode node, final EditorContext editorContext) {
    return (SLinkOperations.getTarget(node, AttributesRolesUtil.childRoleFromAttributeRole("traceAnnotation"), true) == null) && !(SNodeOperations.isInstanceOf(node, "med.requirements.structure.RequirementsTrace"));
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    SLinkOperations.setNewChild(node, AttributesRolesUtil.childRoleFromAttributeRole("traceAnnotation"), "med.requirements.structure.RequirementsTrace");
  }

  public String getLocationString() {
    return "med.requirements.intentions";
  }
}
