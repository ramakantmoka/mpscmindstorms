package med.quantities.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.ComparisonRule_Runtime;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.SModelUtil_new;

public class compareAvgAndGenericAvg_ComparisonRule extends ComparisonRule_Runtime {
  public compareAvgAndGenericAvg_ComparisonRule() {
  }

  public boolean areComparable(SNode node1, SNode node2) {
    if (SNodeOperations.getConceptDeclaration(SLinkOperations.getTarget(node1, "baseType", true)) == SNodeOperations.getConceptDeclaration(SLinkOperations.getTarget(node2, "baseType", true))) {
      return true;
    }
    return false;
  }

  public boolean isWeak() {
    return true;
  }

  public boolean isApplicable1(SNode node) {
    return SModelUtil_new.isAssignableConcept(node.getConceptFqName(), this.getApplicableConceptFQName1());
  }

  public boolean isApplicable2(SNode node) {
    return SModelUtil_new.isAssignableConcept(node.getConceptFqName(), this.getApplicableConceptFQName2());
  }

  public String getApplicableConceptFQName1() {
    return "med.quantities.structure.AveragingType";
  }

  public String getApplicableConceptFQName2() {
    return "med.quantities.structure.GenericAveragingType";
  }
}
