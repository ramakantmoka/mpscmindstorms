package med.dataflowblocks.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class Split extends AbstractBlock {
  public static final String concept = "med.dataflowblocks.structure.Split";
  public static final String OUTS = "outs";

  public Split(SNode node) {
    super(node);
  }

  public int getOutsesCount() {
    return this.getChildCount(Split.OUTS);
  }

  public Iterator<SplitOut> outses() {
    return this.children(SplitOut.class, Split.OUTS);
  }

  public List<SplitOut> getOutses() {
    return this.getChildren(SplitOut.class, Split.OUTS);
  }

  public void addOuts(SplitOut node) {
    this.addChild(Split.OUTS, node);
  }

  public void insertOuts(SplitOut prev, SplitOut node) {
    this.insertChild(prev, Split.OUTS, node);
  }

  public static Split newInstance(SModel sm, boolean init) {
    return (Split)SModelUtil_new.instantiateConceptDeclaration("med.dataflowblocks.structure.Split", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static Split newInstance(SModel sm) {
    return Split.newInstance(sm, false);
  }
}
