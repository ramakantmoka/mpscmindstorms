package med.core.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class TextBlock extends BaseConcept implements IModuleContent, IReduceToImplementation {
  public static final String concept = "med.core.structure.TextBlock";
  public static final String TEXT = "text";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";

  public TextBlock(SNode node) {
    super(node);
  }

  public String getText() {
    return this.getProperty(TextBlock.TEXT);
  }

  public void setText(String value) {
    this.setProperty(TextBlock.TEXT, value);
  }

  public String getShortDescription() {
    return this.getProperty(TextBlock.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(TextBlock.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(TextBlock.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(TextBlock.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(TextBlock.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(TextBlock.VIRTUAL_PACKAGE, value);
  }

  public static TextBlock newInstance(SModel sm, boolean init) {
    return (TextBlock)SModelUtil_new.instantiateConceptDeclaration("med.core.structure.TextBlock", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static TextBlock newInstance(SModel sm) {
    return TextBlock.newInstance(sm, false);
  }
}
