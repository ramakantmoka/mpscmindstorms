package med.core.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.constraints.BaseNodeReferenceSearchScopeProvider;
import jetbrains.mps.smodel.constraints.IModelConstraints;
import jetbrains.mps.smodel.constraints.ModelConstraintsManager;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.smodel.constraints.ReferentConstraintContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;

public class ModuleImport_importedModule_ReferentConstraint extends BaseNodeReferenceSearchScopeProvider implements IModelConstraints {
  public ModuleImport_importedModule_ReferentConstraint() {
  }

  public void registerSelf(ModelConstraintsManager manager) {
    manager.registerNodeReferentSearchScopeProvider("med.core.structure.ModuleImport", "importedModule", this);
  }

  public void unRegisterSelf(ModelConstraintsManager manager) {
    manager.unRegisterNodeReferentSearchScopeProvider("med.core.structure.ModuleImport", "importedModule");
  }

  public Object createSearchScopeOrListOfNodes(final IOperationContext operationContext, final ReferentConstraintContext _context) {
    return SModelOperations.getNodesIncludingImported(_context.getModel(), operationContext.getScope(), "med.core.structure.Module");
  }
}
