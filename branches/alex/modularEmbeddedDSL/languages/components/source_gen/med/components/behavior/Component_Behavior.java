package med.components.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.List;
import java.util.ArrayList;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class Component_Behavior {
  public static void init(SNode thisNode) {
  }

  public static List<SNode> call_allProcedures_2739617086186422653(SNode thisNode) {
    List<SNode> res = new ArrayList<SNode>();
    for (SNode p : ListSequence.fromList(SLinkOperations.getTargets(thisNode, "ports", true)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "med.components.structure.ProvidedPort");
      }
    })) {
      ListSequence.fromList(res).addSequence(ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(p, "interface", false), "procedures", true)));
    }
    return res;
  }

  public static SNode call_portForInterface_2739617086196425897(SNode thisNode, final SNode intf) {
    return SNodeOperations.cast(ListSequence.fromList(SLinkOperations.getTargets(thisNode, "ports", true)).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SNodeOperations.isInstanceOf(it, "med.components.structure.ProvidedPort");
      }
    }).where(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SLinkOperations.getTarget(it, "interface", false) == intf;
      }
    }).first(), "med.components.structure.ProvidedPort");
  }
}
